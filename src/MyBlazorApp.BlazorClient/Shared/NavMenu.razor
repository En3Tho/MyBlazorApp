@using MyBlazorApp.BlazorClient.Pages
@inject ILogger<NavMenu> _logger
@inject ThemeSwitch ThemeSwitch
@implements IDisposable

<div class="navbar navbar-dark pl-4 top-row @ThemeSwitch.ThemeString">
    <a class="navbar-brand" href="">MyBlazorApp</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="flex-column nav">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span aria-hidden="true" class="oi oi-home"></span> Home
            </NavLink>
        </li>
        @foreach (var i in Enumerable.Range(1, 10))
        {
            <li class="nav-item px-3">
                <CounterNavLink href="@($"{nameof(Counter)}/{i}")" IncrementAmount="@i"/>
            </li>
        }
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="@(nameof(FetchData))">
                <span aria-hidden="true" class="oi oi-list-rich"></span> Fetch data
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="@(nameof(LearningGrounds))">
                <span aria-hidden="true" class="oi oi-list-rich"></span> Learning grounds
            </NavLink>
        </li>
    </ul>
</div>

@code {
    private bool collapseNavMenu = true;
    private ComponentEventHandler _handler;

    protected override void OnInitialized()
    {
        _handler.Subscribe(StateHasChanged, ThemeSwitch);
    }

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : "";

    private void ToggleNavMenu()
    {
        _logger.Trace()?.Write(nameof(ToggleNavMenu));
        collapseNavMenu = !collapseNavMenu;
    }

    public void Dispose() => _handler.Unsubscribe(ThemeSwitch);
}