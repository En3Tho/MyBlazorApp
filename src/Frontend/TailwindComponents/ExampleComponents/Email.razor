<div class="relative rounded-xl overflow-auto">
    <div class="max-w-sm mx-auto bg-white shadow pt-6 pb-5 px-6">
        <form>
            <div>
                <label for="email1" class="block text-sm font-medium text-slate-700">Email</label>
                <div class="mt-1">
                    <input @bind="CurrentInput" @oninput="OnInputChange" type="email" name="email" id="email1" placeholder="you@example.com"
                           class="peer px-3 py-2 bg-white border shadow-sm border-slate-300 placeholder-slate-400 block w-full rounded-md
                                  disabled:bg-slate-50 disabled:text-slate-500 disabled:border-slate-200 disabled:shadow-none
                                  focus:outline-none focus:border-sky-500 focus:ring-sky-500 focus:ring-1
                                  invalid:border-pink-500 invalid:text-pink-600
                                  focus:invalid:border-pink-500 focus:invalid:ring-pink-500
                                  sm:text-sm">
                    <p class="mt-2 invisible peer-invalid:visible text-pink-600 text-sm">Please provide a valid email address.</p>
                </div>
            </div>
        </form>
    </div>
</div>

<div class="max-w-sm mx-auto bg-white shadow pt-6 pb-5 px-6">
    <form>
        <label class="block">
            <span class="block text-sm font-medium text-slate-700 after:content-['*'] after:ml-0.5 after:text-red-500">Email</span>
            <input type="email" name="email" id="email2"
                   class="block w-full mt-1 px-3 py-2 rounded-md bg-white border shadow-sm border-slate-300 placeholder-slate-400
                          focus:outline-none focus:border-sky-500 focus:ring-sky-500 focus:ring-1
                          sm:text-sm" placeholder="you@example.com">
        </label>
    </form>
</div>

<ExampleBlock>
    Current: @(CurrentInput ?? "Nothing")
    IsValid: @IsValid
    HelpMe: @Help
</ExampleBlock>

@code {

    private void OnInputChange(ChangeEventArgs args)
    {
        Help = args.Value as string;
    }

    private string? Help { get; set; }
    private string? CurrentInput { get; set; }
    private bool IsValid { get; set; }
}